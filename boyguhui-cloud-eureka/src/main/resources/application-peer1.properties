spring.application.name=eureka-server
server.port=8081
eureka.instance.hostname=peerl 
eureka.client.serviceUrl.defaultZone=http://peer2:8082/eureka,http://peer3:8083/eureka
#表示是否将自己注册到Eureka Server，默认为true。
eureka.client.register-with-eureka=true
#表示是否从Eureka Server获取注册信息，默认为true。
eureka.client.fetch-registry=false
#显示ip注册
#eureka.instance.preferIpAddress=true
#eureka.instance.prefer-ip-address=true
#eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}
#-------------------------------------------------------------------
#由于Eureka拥有自我保护机制，当其注册表里服务因为网络或其他原因出现故障而关停时，Eureka不会剔除服务注册，而是等待其修复。这是AP的一种实现。 为了让其有精准的 CP健康检查，可以采取让其剔除不健康节点。
#server端:
#eureka.server.enable-self-preservation//（设为false，关闭自我保护主要）
#eureka.server.eviction-interval-timer-in-ms//清理间隔（单位毫秒，默认是60*1000）
#client端：
#eureka.client.healthcheck.enabled = true//开启健康检查（需要spring-boot-starter-actuator依赖）
#eureka.instance.lease-renewal-interval-in-seconds =10//租期更新时间间隔（默认30秒）
#eureka.instance.lease-expiration-duration-in-seconds =30//租期到期时间（默认90秒）
